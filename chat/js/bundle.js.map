{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/app.coffee","bundle.js","js/ChatExampleData.js","js/actions/MessageAction.coffee","js/actions/ServerAction.coffee","js/actions/ThreadAction.coffee","js/components/app.tag","js/components/message-editor.tag","js/components/message-panel.tag","js/components/thread-panel.tag","js/stores/MessageStore.coffee","js/stores/ThreadStore.coffee","js/utils/MessageUtils.coffee","js/utils/WebAPIUtils.js","node_modules/moment/moment.js","node_modules/riot/riot.js","node_modules/riotcontrol/riotcontrol.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","./js/app.coffee","ChatExampleData","MessageStore","RiotControl","ThreadStore","WebAPIUtils","riot","init","addStore","getAllMessages","mount","./ChatExampleData","./components/app.tag","./components/message-editor.tag","./components/message-panel.tag","./components/thread-panel.tag","./stores/MessageStore.coffee","./stores/ThreadStore.coffee","./utils/WebAPIUtils","riotcontrol","/Users/uzimith/learn/flux-practice/chat/js/ChatExampleData.js","module","localStorage","clear","setItem","JSON","stringify","threadID","threadName","authorName","text","timestamp","Date","now","/Users/uzimith/learn/flux-practice/chat/js/actions/MessageAction.coffee","MessageAction","moment","add","message","getCurrentID","date","isRead","trigger","createMessage","../stores/ThreadStore.coffee","../utils/WebAPIUtils","/Users/uzimith/learn/flux-practice/chat/js/actions/ServerAction.coffee","ServerAction","receiveAll","rawMessages","receiveCreatedMessage","createdMessage","/Users/uzimith/learn/flux-practice/chat/js/actions/ThreadAction.coffee","ThreadAction","select","currentID","/Users/uzimith/learn/flux-practice/chat/js/components/app.tag","tag","/Users/uzimith/learn/flux-practice/chat/js/components/message-editor.tag","ENTER_KEY_CODE","this","edit","keydown","_this","keyCode","target","value","input","../actions/MessageAction.coffee","/Users/uzimith/learn/flux-practice/chat/js/components/message-panel.tag","title","messages","thread","on","getMessages","getCurrentThread","name","update","../stores/MessageStore.coffee","/Users/uzimith/learn/flux-practice/chat/js/components/thread-panel.tag","threads","getThreads","selectThread","item","id","../actions/ThreadAction.coffee","/Users/uzimith/learn/flux-practice/chat/js/stores/MessageStore.coffee","MessageUtils","__bind","fn","me","apply","arguments","_at_message","addMessages","emit","observable","push","prototype","_i","_len","_ref","_results","convertRawMessage","../utils/MessageUtils.coffee","/Users/uzimith/learn/flux-practice/chat/js/stores/ThreadStore.coffee","initThreads","getAllChrono","orderedThreads","sort","b","lastMessage","allChrono","lastTimestamp","/Users/uzimith/learn/flux-practice/chat/js/utils/MessageUtils.coffee","rawMessage","currentThreadID","/Users/uzimith/learn/flux-practice/chat/js/utils/WebAPIUtils.js","parse","getItem","setTimeout","../actions/ServerAction.coffee","/Users/uzimith/learn/flux-practice/chat/node_modules/moment/moment.js","global","undefined","dfl","c","hasOwnProp","hasOwnProperty","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","printMsg","msg","suppressDeprecationWarnings","console","warn","deprecate","firstTime","extend","deprecateSimple","deprecations","padToken","func","count","leftZeroFill","ordinalizeToken","period","localeData","ordinal","monthDiff","anchor2","adjust","wholeMonthDiff","year","month","anchor","clone","meridiemFixWrap","locale","hour","meridiem","isPm","meridiemHour","isPM","Locale","Moment","config","skipOverflow","checkOverflow","copyConfig","_d","updateInProgress","updateOffset","Duration","duration","normalizedInput","normalizeObjectUnits","years","quarters","quarter","months","weeks","week","days","day","hours","minutes","minute","seconds","second","milliseconds","millisecond","_milliseconds","_days","_months","_data","_locale","_bubble","toString","valueOf","to","from","prop","val","_isAMomentObject","_f","_l","_strict","_tzm","_isUTC","_offset","_pf","momentProperties","absRound","number","Math","ceil","floor","targetLength","forceSign","output","abs","sign","positiveMomentsDifference","base","other","res","isAfter","momentsDifference","makeAs","isBefore","createAdder","direction","dur","tmp","isNaN","addOrSubtractDurationFromMoment","mom","isAdding","setTime","rawSetter","rawGetter","rawMonthSetter","isArray","Object","isDate","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","diffs","toInt","normalizeUnits","units","lowered","toLowerCase","replace","unitAliases","camelFunctions","inputObject","normalizedProp","makeList","field","setter","indexOf","format","index","getter","method","results","m","utc","set","argumentForCoercion","coercedNumber","isFinite","daysInMonth","UTC","getUTCDate","weeksInYear","dow","doy","weekOfYear","daysInYear","isLeapYear","_a","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","isValid","_isValid","getTime","bigHour","normalizeLocale","key","chooseLocale","names","j","next","split","loadLocale","slice","join","oldLocale","locales","hasModule","model","diff","isMoment","local","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatTokenFunctions","Function","formatMoment","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","longDateFormat","localFormattingTokens","lastIndex","test","getParseRegexForToken","token","strict","parseTokenOneDigit","parseTokenThreeDigits","parseTokenFourDigits","parseTokenOneToFourDigits","parseTokenSignedNumber","parseTokenSixDigits","parseTokenOneToSixDigits","parseTokenTwoDigits","parseTokenOneToThreeDigits","parseTokenWord","_meridiemParse","parseTokenOffsetMs","parseTokenTimestampMs","parseTokenTimezone","parseTokenT","parseTokenDigits","parseTokenOneOrTwoDigits","_ordinalParse","_ordinalParseLenient","RegExp","regexpEscape","unescapeFormat","utcOffsetFromString","string","possibleTzMatches","tzChunk","parts","parseTimezoneChunker","addTimeToArrayFromToken","datePartArray","monthsParse","parseInt","_dayOfYear","parseTwoDigitYear","_meridiem","parseFloat","_useUTC","weekdaysParse","_w","invalidWeekday","substr","dayOfYearFromWeekInfo","w","weekYear","weekday","temp","GG","W","E","_week","gg","d","dayOfYearFromWeeks","dayOfYear","dateFromConfig","currentDate","yearToUse","currentDateArray","makeUTCDate","getUTCMonth","_nextDay","makeDate","setUTCMinutes","getUTCMinutes","dateFromObject","getUTCFullYear","getFullYear","getMonth","getDate","makeDateFromStringAndFormat","ISO_8601","parseISO","parsedInput","tokens","skipped","stringLength","totalParsedInputLength","matched","p1","p2","p3","p4","makeDateFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","NaN","score","isoRegex","exec","isoDates","isoTimes","makeDateFromString","createFromInputFallback","map","arr","makeDateFromInput","aspNetJsonRegex","obj","y","h","M","ms","setFullYear","setUTCFullYear","parseWeekday","substituteTimeAgo","withoutSuffix","isFuture","relativeTime","posNegDuration","round","as","args","relativeTimeThresholds","firstDayOfWeek","firstDayOfWeekOfYear","adjustedMoment","end","daysToDayOfWeek","daysToAdd","getUTCDay","makeMoment","invalid","preparse","pickBy","moments","dayOfMonth","unit","makeAccessor","keepTime","daysToYears","yearsToDays","makeDurationGetter","makeGlobal","shouldDeprecate","ender","oldGlobalMoment","globalScope","VERSION","window","aspNetTimeSpanJsonRegex","isoDurationRegex","isoFormat","unitMillisecondFactors","Milliseconds","Seconds","Minutes","Hours","Days","Months","Years","D","Q","DDD","dayofyear","isoweekday","isoweek","weekyear","isoweekyear","ordinalizeTokens","paddedTokens","MMM","monthsShort","MMMM","dd","weekdaysMin","ddd","weekdaysShort","dddd","weekdays","isoWeek","YY","YYYY","YYYYY","YYYYYY","gggg","ggggg","isoWeekYear","GGGG","GGGGG","isoWeekday","A","H","S","SS","SSS","SSSS","Z","utcOffset","ZZ","z","zoneAbbr","zz","zoneName","x","X","unix","lists","pop","DDDD","source","_monthsShort","monthName","regex","_monthsParse","_longMonthsParse","_shortMonthsParse","_weekdays","_weekdaysShort","_weekdaysMin","weekdayName","_weekdaysParse","_longDateFormat","LTS","LT","L","LL","LLL","LLLL","toUpperCase","charAt","isLower","_calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendar","_relativeTime","future","past","mm","hh","MM","yy","pastFuture","_ordinal","postformat","firstDayOfYear","_invalidDate","max","ret","parseIso","diffRes","isDuration","inp","version","defaultFormat","relativeTimeThreshold","threshold","limit","lang","values","data","defineLocale","_abbr","abbr","langData","flags","parseZone","toDate","toISOString","toArray","isDSTShifted","parsingFlags","invalidAt","keepLocalTime","subtract","_dateUtcOffset","inputString","asFloat","that","zoneDiff","time","humanize","fromNow","sod","startOf","isDST","getDay","endOf","inputMs","isBetween","isSame","zone","localAdjust","offset","_changeInProgress","isLocal","isUtcOffset","isUtc","hasAlignedHourOffset","isoWeeksInYear","weekInfo","get","newLocaleData","getTimezoneOffset","dates","isoWeeks","toJSON","isUTC","withSuffix","toIsoString","asSeconds","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","ordinalParse","define","amd","noGlobal","self","/Users/uzimith/learn/flux-practice/chat/node_modules/riot/riot.js","loopKeys","expr","els","trim","pos","_each","dom","parent","remAttr","checksum","template","outerHTML","prev","previousSibling","root","parentNode","rendered","tags","one","removeChild","hasParent","items","tmpl","Array","testsum","unmount","keys","arrDiff","splice","nodes","childNodes","prev_index","Tag","before","loop","parseNamedElements","walk","nodeType","each","attributes","attr","parseLayout","expressions","addExpr","type","tagName","nodeValue","getAttribute","impl","tag_impl","bool","conf","updateOpts","opts","firstChild","is_loop","loop_dom","insertBefore","appendChild","children","mkdom","p","off","mounted","setEventHandler","handler","event","which","charCode","srcElement","currentTarget","preventDefault","returnValue","insertTo","node","attr_name","stub","document","createTextNode","style","display","setAttribute","removeAttribute","tag_name","root_tag","el","createElement","innerHTML","nextSibling","arr1","arr2","filter","doc","HTMLDocument","settings","callbacks","events","typed","cb","fns","busy","concat","evt","hash","loc","parser","path","current","top","location","win","route","arg","addEventListener","attachEvent","brackets","re","re_expr","_","k","v","wrap","nonull","re_vars","cache","str","virtual_dom","html","mountTo","selector","querySelectorAll","/Users/uzimith/learn/flux-practice/chat/node_modules/riotcontrol/riotcontrol.js","_stores","store","forEach","api"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","riot = require('riot')\nRiotControl = require('riotcontrol')\nChatExampleData = require('./ChatExampleData')\n\nMessageStore = require('./stores/MessageStore.coffee')\nThreadStore = require('./stores/ThreadStore.coffee')\n\nrequire('./components/app.tag')\nrequire('./components/message-panel.tag')\nrequire('./components/message-editor.tag')\nrequire('./components/thread-panel.tag')\n\nChatExampleData.init()\n\nRiotControl.addStore(ThreadStore)\nRiotControl.addStore(MessageStore)\n\nWebAPIUtils = require('./utils/WebAPIUtils')\nWebAPIUtils.getAllMessages()\n\nriot.mount('*')\n",null,"/**\n * This file is provided by Facebook for testing and evaluation purposes\n * only. Facebook reserves all rights not expressly granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * FACEBOOK BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nmodule.exports = {\n\n  init: function() {\n    localStorage.clear();\n    localStorage.setItem('messages', JSON.stringify([\n      {\n        threadID: 0,\n        threadName: 'Jing and Bill',\n        authorName: 'Bill',\n        text: 'Hey Jing, want to give a Flux talk at ForwardJS?',\n        timestamp: Date.now() - 99999\n      },\n      {\n        threadID: 0,\n        threadName: 'Jing and Bill',\n        authorName: 'Bill',\n        text: 'Seems like a pretty cool conference.',\n        timestamp: Date.now() - 89999\n      },\n      {\n        threadID: 0,\n        threadName: 'Jing and Bill',\n        authorName: 'Jing',\n        text: 'Sounds good.  Will they be serving dessert?',\n        timestamp: Date.now() - 79999\n      },\n      {\n        threadID: 1,\n        threadName: 'Dave and Bill',\n        authorName: 'Bill',\n        text: 'Hey Dave, want to get a beer after the conference?',\n        timestamp: Date.now() - 69999\n      },\n      {\n        threadID: 1,\n        threadName: 'Dave and Bill',\n        authorName: 'Dave',\n        text: 'Totally!  Meet you at the hotel bar.',\n        timestamp: Date.now() - 59999\n      },\n      {\n        threadID: 2,\n        threadName: 'Functional Heads',\n        authorName: 'Bill',\n        text: 'Hey Brian, are you going to be talking about functional stuff?',\n        timestamp: Date.now() - 49999\n      },\n      {\n        threadID: 2,\n        threadName: 'Bill and Brian',\n        authorName: 'Brian',\n        text: 'At ForwardJS?  Yeah, of course.  See you there!',\n        timestamp: Date.now() - 39999\n      }\n    ]));\n  }\n\n};\n","RiotControl = require('riotcontrol')\nWebAPIUtils = require('../utils/WebAPIUtils')\nThreadStore = require('../stores/ThreadStore.coffee')\n\nmoment = require('moment')\n\nMessageAction =\n  add: (text) ->\n    message =\n      threadID: ThreadStore.getCurrentID()\n      authorName: 'Bill'\n      date: moment()\n      text: text\n      isRead: true\n    RiotControl.trigger('message_add', message)\n    WebAPIUtils.createMessage(message)\n\nmodule.exports = MessageAction\n","RiotControl = require('riotcontrol')\nWebAPIUtils = require('../utils/WebAPIUtils')\n\nServerAction =\n\n  receiveAll: (rawMessages) ->\n    RiotControl.trigger('server_raw_messages', rawMessages)\n\n  receiveCreatedMessage: (createdMessage) ->\n    RiotControl.trigger('server_raw_created_message', createdMessage)\n\nmodule.exports = ServerAction\n","RiotControl = require('riotcontrol')\n\nThreadAction =\n  select: (currentID) ->\n    RiotControl.trigger('thread_select', currentID)\n\nmodule.exports = ThreadAction\n","var riot = require('riot');\n\nriot.tag('app', '<header class=\"navbar navbar-default navbar-static-top\"><div class=\"container\"><div class=\"navbar-header\"><div class=\"navbar-brand\">Chat</div></div></div></header><div class=\"container\"><thread-panel class=\"col-md-3\"></thread-panel><message-panel class=\"col-md-6\"></message-panel></div>', function(opts) {\n\n});","var riot = require('riot');\n\nriot.tag('message-editor', '<form onsubmit=\"{ add }\"><textarea name=\"input\" onchange=\"{ edit }\" onkeydown=\"{ keydown }\" class=\"form-control\"></textarea></form>', function(opts) {var ENTER_KEY_CODE, MessageAction;\n\nMessageAction = require('../actions/MessageAction.coffee');\n\nENTER_KEY_CODE = 13;\n\nthis.edit = (function(_this) {\n  return function(e) {};\n})(this);\n\nthis.keydown = (function(_this) {\n  return function(e) {\n    if (e.keyCode === ENTER_KEY_CODE) {\n      _this.add(e);\n      return false;\n    } else {\n      _this.text = e.target.value;\n      return true;\n    }\n  };\n})(this);\n\nthis.add = (function(_this) {\n  return function(e) {\n    if (_this.text) {\n      MessageAction.add(_this.text);\n      return _this.text = _this.input.value = '';\n    }\n  };\n})(this);\n\n});","var riot = require('riot');\n\nriot.tag('message-panel', '<h3>{ title }</h3><div class=\"message-list\"><div each=\"{ message, id in messages }\" class=\"message clearfix\"><h5>{ message.authorName }</h5><div class=\"message-date pull-right\">{ message.date.fromNow() }</div><div class=\"message-last-message\">{ message.text }</div></div></div><message-editor></message-editor>', function(opts) {var MessageStore, RiotControl, ThreadStore;\n\nRiotControl = require('riotcontrol');\n\nMessageStore = require('../stores/MessageStore.coffee');\n\nThreadStore = require('../stores/ThreadStore.coffee');\n\nthis.title = \"\";\n\nthis.messages = [];\n\nthis.thread = \"\";\n\nthis.on('mount', (function(_this) {\n  return function() {\n    return RiotControl.trigger('message_init');\n  };\n})(this));\n\nRiotControl.on('message_changed', (function(_this) {\n  return function(data) {\n    _this.messages = MessageStore.getMessages();\n    _this.title = ThreadStore.getCurrentThread().name;\n    return _this.update();\n  };\n})(this));\n\n});","var riot = require('riot');\n\nriot.tag('thread-panel', '<div class=\"list-group\"><a each=\"{ thread, id in threads }\" onclick=\"{ parent.selectThread }\" class=\"list-group-item {active: id == parent.currentID}\"><h5 class=\"list-group-teim-heading\">{ thread.name }</h5><p class=\"list-gropu item-text\"><div class=\"thread-date\">{ thread.lastMessage.date.fromNow() }</div><div class=\"thread-last-message\">{ thread.lastMessage.text }</div></p></a></div>', function(opts) {var MessageStore, RiotControl, ThreadAction, ThreadStore;\n\nRiotControl = require('riotcontrol');\n\nThreadAction = require('../actions/ThreadAction.coffee');\n\nMessageStore = require('../stores/MessageStore.coffee');\n\nThreadStore = require('../stores/ThreadStore.coffee');\n\nthis.currentID = 0;\n\nthis.threads = [];\n\nthis.on('mount', (function(_this) {\n  return function() {\n    return RiotControl.trigger('thread_init');\n  };\n})(this));\n\nRiotControl.on('thread_changed', (function(_this) {\n  return function() {\n    _this.threads = ThreadStore.getThreads();\n    _this.currentID = ThreadStore.getCurrentID();\n    return _this.update();\n  };\n})(this));\n\nthis.selectThread = (function(_this) {\n  return function(e) {\n    ThreadAction.select(e.item.id);\n    _this.currentID = e.item.id;\n    return _this.update();\n  };\n})(this);\n\n});","riot = require('riot')\nmoment = require('moment')\nMessageUtils = require('../utils/MessageUtils.coffee')\n\nclass MessageStore\n\n  currentID: 0\n  messages: []\n\n  constructor: (@message) ->\n    riot.observable(this)\n    @on 'server_raw_messages', (rawMessages) =>\n      @addMessages(rawMessages)\n      @emit()\n\n    @on 'message_init', =>\n      @emit()\n\n    @on 'message_add', (message) =>\n      @messages.push(message)\n      @emit()\n\n    @on 'thread_select', (currentID)=>\n      @currentID = currentID\n      @emit()\n\n  emit: =>\n    @trigger 'message_changed'\n\n  getMessages: =>\n    (message for message, id in @messages when message.threadID is @currentID)\n\n  addMessages: (rawMessages) =>\n    for message, id in rawMessages\n      if !@messages[id]\n        @messages[id] = MessageUtils.convertRawMessage(message, @currentID)\n\nmodule.exports = new MessageStore\n","riot = require('riot')\nMessageUtils = require('../utils/MessageUtils.coffee')\n\nclass ThreadStore\n\n  currentID: 0\n  threads: []\n\n  constructor: (@message) ->\n    riot.observable(this)\n\n    @on 'server_raw_messages', (rawMessages) =>\n      @initThreads(rawMessages)\n      @emit()\n\n    @on 'thread_init', =>\n      @emit()\n\n    @on 'thread_select', (currentID)=>\n      @currentID = currentID\n      @emit()\n\n  emit: ->\n    @trigger 'thread_changed', @threads\n\n  getCurrentID: =>\n    @currentID\n\n  getCurrentThread: =>\n    @threads[@currentID]\n\n  getThreads: =>\n    @threads\n\n  getAllChrono: =>\n    orderedThreads = []\n    for thread in @threads\n      orderedThreads.push(thread)\n    orderedThreads.sort (a, b) ->\n      if a.lastMessage.date < b.lastMessage.date\n        return -1\n      else if a.lastMessage.date > b.lastMessage.date\n        return 1\n      return 0\n    return orderedThreads\n\n  initThreads: (rawMessages) =>\n    for message, id in rawMessages\n      threadID = message.threadID\n      thread = @threads[threadID]\n      if (thread and thread.lastTimestamp > message.timestamp)\n        return\n      @threads[threadID] =\n        id: threadID\n        name: message.threadName\n        lastMessage: MessageUtils.convertRawMessage(message, @currentID)\n    if (!@currentID)\n      allChrono = @getAllChrono()\n      @currentID = allChrono[allChrono.length - 1].id\n    @threads[@currentID].lastMessage.isRead = true\n\nmodule.exports = new ThreadStore\n","moment = require('moment')\n\nMessageUtils =\n  convertRawMessage: (rawMessage, currentThreadID) ->\n    id: rawMessage.id\n    threadID: rawMessage.threadID\n    authorName: rawMessage.authorName\n    date: moment(new Date(rawMessage.timestamp))\n    text: rawMessage.text\n    isRead: rawMessage.threadID is currentThreadID\n\nmodule.exports = MessageUtils\n","/**\n * This file is provided by Facebook for testing and evaluation purposes\n * only. Facebook reserves all rights not expressly granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * FACEBOOK BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n/* edited by uzimy */\n\n// !!! Please Note !!!\n// We are using localStorage as an example, but in a real-world scenario, this\n// would involve XMLHttpRequest, or perhaps a newer client-server protocol.\n// The function signatures below might be similar to what you would build, but\n// the contents of the functions are just trying to simulate client-server\n// communication and server-side processing.\n\nmodule.exports = {\n\n  getAllMessages: function() {\n    // simulate retrieving data from a database\n   var rawMessages = JSON.parse(localStorage.getItem('messages'));\n   var ServerAction = require('../actions/ServerAction.coffee');\n\n    // simulate success callback\n    ServerAction.receiveAll(rawMessages);\n  },\n\n  createMessage: function(message, threadName) {\n    // simulate writing to a database\n    var rawMessages = JSON.parse(localStorage.getItem('messages'));\n    var timestamp = Date.now();\n    var id = 'm_' + timestamp;\n    var threadID = message.threadID || ('t_' + Date.now());\n    var createdMessage = {\n      id: id,\n      threadID: threadID,\n      threadName: threadName,\n      authorName: message.authorName,\n      text: message.text,\n      timestamp: timestamp\n    };\n    rawMessages.push(createdMessage);\n    localStorage.setItem('messages', JSON.stringify(rawMessages));\n\n    // simulate success callback\n    setTimeout(function() {\n      var ServerAction = require('../actions/ServerAction.coffee');\n      ServerAction.receiveCreatedMessage(createdMessage);\n    }, 0);\n  }\n\n};\n","//! moment.js\n//! version : 2.9.0\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (undefined) {\n    /************************************\n        Constants\n    ************************************/\n\n    var moment,\n        VERSION = '2.9.0',\n        // the global-scope this is NOT the global object in Node.js\n        globalScope = (typeof global !== 'undefined' && (typeof window === 'undefined' || window === global.window)) ? global : this,\n        oldGlobalMoment,\n        round = Math.round,\n        hasOwnProperty = Object.prototype.hasOwnProperty,\n        i,\n\n        YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n\n        // internal storage for locale config files\n        locales = {},\n\n        // extra moment internal properties (plugins register props here)\n        momentProperties = [],\n\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module && module.exports),\n\n        // ASP.NET json date format regex\n        aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n        aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\n        // format tokens\n        formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n\n        // parsing token regexes\n        parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n        parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n        parseTokenOneToFourDigits = /\\d{1,4}/, // 0 - 9999\n        parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n        parseTokenDigits = /\\d+/, // nonzero number of digits\n        parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.\n        parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        parseTokenT = /T/i, // T (ISO separator)\n        parseTokenOffsetMs = /[\\+\\-]?\\d+/, // 1234567890123\n        parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n\n        //strict parsing regexes\n        parseTokenOneDigit = /\\d/, // 0 - 9\n        parseTokenTwoDigits = /\\d\\d/, // 00 - 99\n        parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n        parseTokenFourDigits = /\\d{4}/, // 0000 - 9999\n        parseTokenSixDigits = /[+-]?\\d{6}/, // -999,999 - 999,999\n        parseTokenSignedNumber = /[+-]?\\d+/, // -inf - inf\n\n        // iso 8601 regex\n        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n        isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\n        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n            ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/]\n        ],\n\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n            ['HH', /(T| )\\d\\d/]\n        ],\n\n        // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-', '15', '30']\n        parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\n        // getter and setter names\n        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n        unitMillisecondFactors = {\n            'Milliseconds' : 1,\n            'Seconds' : 1e3,\n            'Minutes' : 6e4,\n            'Hours' : 36e5,\n            'Days' : 864e5,\n            'Months' : 2592e6,\n            'Years' : 31536e6\n        },\n\n        unitAliases = {\n            ms : 'millisecond',\n            s : 'second',\n            m : 'minute',\n            h : 'hour',\n            d : 'day',\n            D : 'date',\n            w : 'week',\n            W : 'isoWeek',\n            M : 'month',\n            Q : 'quarter',\n            y : 'year',\n            DDD : 'dayOfYear',\n            e : 'weekday',\n            E : 'isoWeekday',\n            gg: 'weekYear',\n            GG: 'isoWeekYear'\n        },\n\n        camelFunctions = {\n            dayofyear : 'dayOfYear',\n            isoweekday : 'isoWeekday',\n            isoweek : 'isoWeek',\n            weekyear : 'weekYear',\n            isoweekyear : 'isoWeekYear'\n        },\n\n        // format function strings\n        formatFunctions = {},\n\n        // default relative time thresholds\n        relativeTimeThresholds = {\n            s: 45,  // seconds to minute\n            m: 45,  // minutes to hour\n            h: 22,  // hours to day\n            d: 26,  // days to month\n            M: 11   // months to year\n        },\n\n        // tokens to ordinalize and pad\n        ordinalizeTokens = 'DDD w W M D d'.split(' '),\n        paddedTokens = 'M D H h m s w W'.split(' '),\n\n        formatTokenFunctions = {\n            M    : function () {\n                return this.month() + 1;\n            },\n            MMM  : function (format) {\n                return this.localeData().monthsShort(this, format);\n            },\n            MMMM : function (format) {\n                return this.localeData().months(this, format);\n            },\n            D    : function () {\n                return this.date();\n            },\n            DDD  : function () {\n                return this.dayOfYear();\n            },\n            d    : function () {\n                return this.day();\n            },\n            dd   : function (format) {\n                return this.localeData().weekdaysMin(this, format);\n            },\n            ddd  : function (format) {\n                return this.localeData().weekdaysShort(this, format);\n            },\n            dddd : function (format) {\n                return this.localeData().weekdays(this, format);\n            },\n            w    : function () {\n                return this.week();\n            },\n            W    : function () {\n                return this.isoWeek();\n            },\n            YY   : function () {\n                return leftZeroFill(this.year() % 100, 2);\n            },\n            YYYY : function () {\n                return leftZeroFill(this.year(), 4);\n            },\n            YYYYY : function () {\n                return leftZeroFill(this.year(), 5);\n            },\n            YYYYYY : function () {\n                var y = this.year(), sign = y >= 0 ? '+' : '-';\n                return sign + leftZeroFill(Math.abs(y), 6);\n            },\n            gg   : function () {\n                return leftZeroFill(this.weekYear() % 100, 2);\n            },\n            gggg : function () {\n                return leftZeroFill(this.weekYear(), 4);\n            },\n            ggggg : function () {\n                return leftZeroFill(this.weekYear(), 5);\n            },\n            GG   : function () {\n                return leftZeroFill(this.isoWeekYear() % 100, 2);\n            },\n            GGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 4);\n            },\n            GGGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 5);\n            },\n            e : function () {\n                return this.weekday();\n            },\n            E : function () {\n                return this.isoWeekday();\n            },\n            a    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), true);\n            },\n            A    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), false);\n            },\n            H    : function () {\n                return this.hours();\n            },\n            h    : function () {\n                return this.hours() % 12 || 12;\n            },\n            m    : function () {\n                return this.minutes();\n            },\n            s    : function () {\n                return this.seconds();\n            },\n            S    : function () {\n                return toInt(this.milliseconds() / 100);\n            },\n            SS   : function () {\n                return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n            },\n            SSS  : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            SSSS : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            Z    : function () {\n                var a = this.utcOffset(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n            },\n            ZZ   : function () {\n                var a = this.utcOffset(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n            },\n            z : function () {\n                return this.zoneAbbr();\n            },\n            zz : function () {\n                return this.zoneName();\n            },\n            x    : function () {\n                return this.valueOf();\n            },\n            X    : function () {\n                return this.unix();\n            },\n            Q : function () {\n                return this.quarter();\n            }\n        },\n\n        deprecations = {},\n\n        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'],\n\n        updateInProgress = false;\n\n    // Pick the first defined of two or three arguments. dfl comes from\n    // default.\n    function dfl(a, b, c) {\n        switch (arguments.length) {\n            case 2: return a != null ? a : b;\n            case 3: return a != null ? a : b != null ? b : c;\n            default: throw new Error('Implement me');\n        }\n    }\n\n    function hasOwnProp(a, b) {\n        return hasOwnProperty.call(a, b);\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object, and es5 standard is not very\n        // helpful.\n        return {\n            empty : false,\n            unusedTokens : [],\n            unusedInput : [],\n            overflow : -2,\n            charsLeftOver : 0,\n            nullInput : false,\n            invalidMonth : null,\n            invalidFormat : false,\n            userInvalidated : false,\n            iso: false\n        };\n    }\n\n    function printMsg(msg) {\n        if (moment.suppressDeprecationWarnings === false &&\n                typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n        return extend(function () {\n            if (firstTime) {\n                printMsg(msg);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            printMsg(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    function padToken(func, count) {\n        return function (a) {\n            return leftZeroFill(func.call(this, a), count);\n        };\n    }\n    function ordinalizeToken(func, period) {\n        return function (a) {\n            return this.localeData().ordinal(func.call(this, a), period);\n        };\n    }\n\n    function monthDiff(a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    while (ordinalizeTokens.length) {\n        i = ordinalizeTokens.pop();\n        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n    }\n    while (paddedTokens.length) {\n        i = paddedTokens.pop();\n        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n    }\n    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // thie is not supposed to happen\n            return hour;\n        }\n    }\n\n    /************************************\n        Constructors\n    ************************************/\n\n    function Locale() {\n    }\n\n    // Moment prototype object\n    function Moment(config, skipOverflow) {\n        if (skipOverflow !== false) {\n            checkOverflow(config);\n        }\n        copyConfig(this, config);\n        this._d = new Date(+config._d);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            moment.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    // Duration Constructor\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = moment.localeData();\n\n        this._bubble();\n    }\n\n    /************************************\n        Helpers\n    ************************************/\n\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = from._pf;\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    // left zero fill a number\n    // see http://jsperf.com/left-zero-filling for performance comparison\n    function leftZeroFill(number, targetLength, forceSign) {\n        var output = '' + Math.abs(number),\n            sign = number >= 0;\n\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return (sign ? (forceSign ? '+' : '') : '-') + output;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = makeAs(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = moment.duration(val, period);\n            addOrSubtractDurationFromMoment(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            moment.updateOffset(mom, days || months);\n        }\n    }\n\n    // check if is an array\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return Object.prototype.toString.call(input) === '[object Date]' ||\n            input instanceof Date;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function normalizeUnits(units) {\n        if (units) {\n            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n            units = unitAliases[units] || camelFunctions[lowered] || lowered;\n        }\n        return units;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeList(field) {\n        var count, setter;\n\n        if (field.indexOf('week') === 0) {\n            count = 7;\n            setter = 'day';\n        }\n        else if (field.indexOf('month') === 0) {\n            count = 12;\n            setter = 'month';\n        }\n        else {\n            return;\n        }\n\n        moment[field] = function (format, index) {\n            var i, getter,\n                method = moment._locale[field],\n                results = [];\n\n            if (typeof format === 'number') {\n                index = format;\n                format = undefined;\n            }\n\n            getter = function (i) {\n                var m = moment().utc().set(setter, i);\n                return method.call(moment._locale, m, format || '');\n            };\n\n            if (index != null) {\n                return getter(index);\n            }\n            else {\n                for (i = 0; i < count; i++) {\n                    results.push(getter(i));\n                }\n                return results;\n            }\n        };\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function checkOverflow(m) {\n        var overflow;\n        if (m._a && m._pf.overflow === -2) {\n            overflow =\n                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :\n                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :\n                m._a[HOUR] < 0 || m._a[HOUR] > 24 ||\n                    (m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 ||\n                                           m._a[SECOND] !== 0 ||\n                                           m._a[MILLISECOND] !== 0)) ? HOUR :\n                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :\n                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :\n                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            m._pf.overflow = overflow;\n        }\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            m._isValid = !isNaN(m._d.getTime()) &&\n                m._pf.overflow < 0 &&\n                !m._pf.empty &&\n                !m._pf.invalidMonth &&\n                !m._pf.nullInput &&\n                !m._pf.invalidFormat &&\n                !m._pf.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    m._pf.charsLeftOver === 0 &&\n                    m._pf.unusedTokens.length === 0 &&\n                    m._pf.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        if (!locales[name] && hasModule) {\n            try {\n                oldLocale = moment.locale();\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n                moment.locale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // Return a moment from input, that is local/utc/utcOffset equivalent to\n    // model.\n    function makeAs(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (moment.isMoment(input) || isDate(input) ?\n                    +input : +moment(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            moment.updateOffset(res, false);\n            return res;\n        } else {\n            return moment(input).local();\n        }\n    }\n\n    /************************************\n        Locale\n    ************************************/\n\n\n    extend(Locale.prototype, {\n\n        set : function (config) {\n            var prop, i;\n            for (i in config) {\n                prop = config[i];\n                if (typeof prop === 'function') {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n            // Lenient ordinal parsing accepts just a number in addition to\n            // number + (possibly) stuff coming from _ordinalParseLenient.\n            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n        },\n\n        _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        months : function (m) {\n            return this._months[m.month()];\n        },\n\n        _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        monthsShort : function (m) {\n            return this._monthsShort[m.month()];\n        },\n\n        monthsParse : function (monthName, format, strict) {\n            var i, mom, regex;\n\n            if (!this._monthsParse) {\n                this._monthsParse = [];\n                this._longMonthsParse = [];\n                this._shortMonthsParse = [];\n            }\n\n            for (i = 0; i < 12; i++) {\n                // make the regex if we don't have it already\n                mom = moment.utc([2000, i]);\n                if (strict && !this._longMonthsParse[i]) {\n                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n                }\n                if (!strict && !this._monthsParse[i]) {\n                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (!strict && this._monthsParse[i].test(monthName)) {\n                    return i;\n                }\n            }\n        },\n\n        _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdays : function (m) {\n            return this._weekdays[m.day()];\n        },\n\n        _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysShort : function (m) {\n            return this._weekdaysShort[m.day()];\n        },\n\n        _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        weekdaysMin : function (m) {\n            return this._weekdaysMin[m.day()];\n        },\n\n        weekdaysParse : function (weekdayName) {\n            var i, mom, regex;\n\n            if (!this._weekdaysParse) {\n                this._weekdaysParse = [];\n            }\n\n            for (i = 0; i < 7; i++) {\n                // make the regex if we don't have it already\n                if (!this._weekdaysParse[i]) {\n                    mom = moment([2000, 1]).day(i);\n                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (this._weekdaysParse[i].test(weekdayName)) {\n                    return i;\n                }\n            }\n        },\n\n        _longDateFormat : {\n            LTS : 'h:mm:ss A',\n            LT : 'h:mm A',\n            L : 'MM/DD/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY LT',\n            LLLL : 'dddd, MMMM D, YYYY LT'\n        },\n        longDateFormat : function (key) {\n            var output = this._longDateFormat[key];\n            if (!output && this._longDateFormat[key.toUpperCase()]) {\n                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                    return val.slice(1);\n                });\n                this._longDateFormat[key] = output;\n            }\n            return output;\n        },\n\n        isPM : function (input) {\n            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n            // Using charAt should be more compatible.\n            return ((input + '').toLowerCase().charAt(0) === 'p');\n        },\n\n        _meridiemParse : /[ap]\\.?m?\\.?/i,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'pm' : 'PM';\n            } else {\n                return isLower ? 'am' : 'AM';\n            }\n        },\n\n\n        _calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        calendar : function (key, mom, now) {\n            var output = this._calendar[key];\n            return typeof output === 'function' ? output.apply(mom, [now]) : output;\n        },\n\n        _relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n\n        relativeTime : function (number, withoutSuffix, string, isFuture) {\n            var output = this._relativeTime[string];\n            return (typeof output === 'function') ?\n                output(number, withoutSuffix, string, isFuture) :\n                output.replace(/%d/i, number);\n        },\n\n        pastFuture : function (diff, output) {\n            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n        },\n\n        ordinal : function (number) {\n            return this._ordinal.replace('%d', number);\n        },\n        _ordinal : '%d',\n        _ordinalParse : /\\d{1,2}/,\n\n        preparse : function (string) {\n            return string;\n        },\n\n        postformat : function (string) {\n            return string;\n        },\n\n        week : function (mom) {\n            return weekOfYear(mom, this._week.dow, this._week.doy).week;\n        },\n\n        _week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        },\n\n        firstDayOfWeek : function () {\n            return this._week.dow;\n        },\n\n        firstDayOfYear : function () {\n            return this._week.doy;\n        },\n\n        _invalidDate: 'Invalid date',\n        invalidDate: function () {\n            return this._invalidDate;\n        }\n    });\n\n    /************************************\n        Formatting\n    ************************************/\n\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n\n    /************************************\n        Parsing\n    ************************************/\n\n\n    // get the regex to find the next token\n    function getParseRegexForToken(token, config) {\n        var a, strict = config._strict;\n        switch (token) {\n        case 'Q':\n            return parseTokenOneDigit;\n        case 'DDDD':\n            return parseTokenThreeDigits;\n        case 'YYYY':\n        case 'GGGG':\n        case 'gggg':\n            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n        case 'Y':\n        case 'G':\n        case 'g':\n            return parseTokenSignedNumber;\n        case 'YYYYYY':\n        case 'YYYYY':\n        case 'GGGGG':\n        case 'ggggg':\n            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n        case 'S':\n            if (strict) {\n                return parseTokenOneDigit;\n            }\n            /* falls through */\n        case 'SS':\n            if (strict) {\n                return parseTokenTwoDigits;\n            }\n            /* falls through */\n        case 'SSS':\n            if (strict) {\n                return parseTokenThreeDigits;\n            }\n            /* falls through */\n        case 'DDD':\n            return parseTokenOneToThreeDigits;\n        case 'MMM':\n        case 'MMMM':\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            return parseTokenWord;\n        case 'a':\n        case 'A':\n            return config._locale._meridiemParse;\n        case 'x':\n            return parseTokenOffsetMs;\n        case 'X':\n            return parseTokenTimestampMs;\n        case 'Z':\n        case 'ZZ':\n            return parseTokenTimezone;\n        case 'T':\n            return parseTokenT;\n        case 'SSSS':\n            return parseTokenDigits;\n        case 'MM':\n        case 'DD':\n        case 'YY':\n        case 'GG':\n        case 'gg':\n        case 'HH':\n        case 'hh':\n        case 'mm':\n        case 'ss':\n        case 'ww':\n        case 'WW':\n            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n        case 'M':\n        case 'D':\n        case 'd':\n        case 'H':\n        case 'h':\n        case 'm':\n        case 's':\n        case 'w':\n        case 'W':\n        case 'e':\n        case 'E':\n            return parseTokenOneOrTwoDigits;\n        case 'Do':\n            return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;\n        default :\n            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n            return a;\n        }\n    }\n\n    function utcOffsetFromString(string) {\n        string = string || '';\n        var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n            minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // function to convert string input to date\n    function addTimeToArrayFromToken(token, input, config) {\n        var a, datePartArray = config._a;\n\n        switch (token) {\n        // QUARTER\n        case 'Q':\n            if (input != null) {\n                datePartArray[MONTH] = (toInt(input) - 1) * 3;\n            }\n            break;\n        // MONTH\n        case 'M' : // fall through to MM\n        case 'MM' :\n            if (input != null) {\n                datePartArray[MONTH] = toInt(input) - 1;\n            }\n            break;\n        case 'MMM' : // fall through to MMMM\n        case 'MMMM' :\n            a = config._locale.monthsParse(input, token, config._strict);\n            // if we didn't find a month name, mark the date as invalid.\n            if (a != null) {\n                datePartArray[MONTH] = a;\n            } else {\n                config._pf.invalidMonth = input;\n            }\n            break;\n        // DAY OF MONTH\n        case 'D' : // fall through to DD\n        case 'DD' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(input);\n            }\n            break;\n        case 'Do' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(parseInt(\n                            input.match(/\\d{1,2}/)[0], 10));\n            }\n            break;\n        // DAY OF YEAR\n        case 'DDD' : // fall through to DDDD\n        case 'DDDD' :\n            if (input != null) {\n                config._dayOfYear = toInt(input);\n            }\n\n            break;\n        // YEAR\n        case 'YY' :\n            datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n            break;\n        case 'YYYY' :\n        case 'YYYYY' :\n        case 'YYYYYY' :\n            datePartArray[YEAR] = toInt(input);\n            break;\n        // AM / PM\n        case 'a' : // fall through to A\n        case 'A' :\n            config._meridiem = input;\n            // config._isPm = config._locale.isPM(input);\n            break;\n        // HOUR\n        case 'h' : // fall through to hh\n        case 'hh' :\n            config._pf.bigHour = true;\n            /* falls through */\n        case 'H' : // fall through to HH\n        case 'HH' :\n            datePartArray[HOUR] = toInt(input);\n            break;\n        // MINUTE\n        case 'm' : // fall through to mm\n        case 'mm' :\n            datePartArray[MINUTE] = toInt(input);\n            break;\n        // SECOND\n        case 's' : // fall through to ss\n        case 'ss' :\n            datePartArray[SECOND] = toInt(input);\n            break;\n        // MILLISECOND\n        case 'S' :\n        case 'SS' :\n        case 'SSS' :\n        case 'SSSS' :\n            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n            break;\n        // UNIX OFFSET (MILLISECONDS)\n        case 'x':\n            config._d = new Date(toInt(input));\n            break;\n        // UNIX TIMESTAMP WITH MS\n        case 'X':\n            config._d = new Date(parseFloat(input) * 1000);\n            break;\n        // TIMEZONE\n        case 'Z' : // fall through to ZZ\n        case 'ZZ' :\n            config._useUTC = true;\n            config._tzm = utcOffsetFromString(input);\n            break;\n        // WEEKDAY - human\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            a = config._locale.weekdaysParse(input);\n            // if we didn't get a weekday name, mark the date as invalid\n            if (a != null) {\n                config._w = config._w || {};\n                config._w['d'] = a;\n            } else {\n                config._pf.invalidWeekday = input;\n            }\n            break;\n        // WEEK, WEEK DAY - numeric\n        case 'w':\n        case 'ww':\n        case 'W':\n        case 'WW':\n        case 'd':\n        case 'e':\n        case 'E':\n            token = token.substr(0, 1);\n            /* falls through */\n        case 'gggg':\n        case 'GGGG':\n        case 'GGGGG':\n            token = token.substr(0, 2);\n            if (input) {\n                config._w = config._w || {};\n                config._w[token] = toInt(input);\n            }\n            break;\n        case 'gg':\n        case 'GG':\n            config._w = config._w || {};\n            config._w[token] = moment.parseTwoDigitYear(input);\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n            week = dfl(w.W, 1);\n            weekday = dfl(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n            week = dfl(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function dateFromConfig(config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                config._pf._overflowDayOfYear = true;\n            }\n\n            date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dateFromObject(config) {\n        var normalizedInput;\n\n        if (config._d) {\n            return;\n        }\n\n        normalizedInput = normalizeObjectUnits(config._i);\n        config._a = [\n            normalizedInput.year,\n            normalizedInput.month,\n            normalizedInput.day || normalizedInput.date,\n            normalizedInput.hour,\n            normalizedInput.minute,\n            normalizedInput.second,\n            normalizedInput.millisecond\n        ];\n\n        dateFromConfig(config);\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [\n                now.getUTCFullYear(),\n                now.getUTCMonth(),\n                now.getUTCDate()\n            ];\n        } else {\n            return [now.getFullYear(), now.getMonth(), now.getDate()];\n        }\n    }\n\n    // date from string and format string\n    function makeDateFromStringAndFormat(config) {\n        if (config._f === moment.ISO_8601) {\n            parseISO(config);\n            return;\n        }\n\n        config._a = [];\n        config._pf.empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    config._pf.unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    config._pf.empty = false;\n                }\n                else {\n                    config._pf.unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                config._pf.unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            config._pf.unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n            config._pf.bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR],\n                config._meridiem);\n        dateFromConfig(config);\n        checkOverflow(config);\n    }\n\n    function unescapeFormat(s) {\n        return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        });\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function regexpEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    // date from string and array of format strings\n    function makeDateFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            config._pf.invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._pf = defaultParsingFlags();\n            tempConfig._f = config._f[i];\n            makeDateFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += tempConfig._pf.charsLeftOver;\n\n            //or tokens\n            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n            tempConfig._pf.score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    // date from iso format\n    function parseISO(config) {\n        var i, l,\n            string = config._i,\n            match = isoRegex.exec(string);\n\n        if (match) {\n            config._pf.iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    // match[5] should be 'T' or undefined\n                    config._f = isoDates[i][0] + (match[6] || ' ');\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(parseTokenTimezone)) {\n                config._f += 'Z';\n            }\n            makeDateFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function makeDateFromString(config) {\n        parseISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function makeDateFromInput(config) {\n        var input = config._i, matched;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n            config._d = new Date(+matched[1]);\n        } else if (typeof input === 'string') {\n            makeDateFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            dateFromConfig(config);\n        } else if (typeof(input) === 'object') {\n            dateFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function makeDate(y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function makeUTCDate(y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    function parseWeekday(input, locale) {\n        if (typeof input === 'string') {\n            if (!isNaN(input)) {\n                input = parseInt(input, 10);\n            }\n            else {\n                input = locale.weekdaysParse(input);\n                if (typeof input !== 'number') {\n                    return null;\n                }\n            }\n        }\n        return input;\n    }\n\n    /************************************\n        Relative Time\n    ************************************/\n\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime(posNegDuration, withoutSuffix, locale) {\n        var duration = moment.duration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            years = round(duration.as('y')),\n\n            args = seconds < relativeTimeThresholds.s && ['s', seconds] ||\n                minutes === 1 && ['m'] ||\n                minutes < relativeTimeThresholds.m && ['mm', minutes] ||\n                hours === 1 && ['h'] ||\n                hours < relativeTimeThresholds.h && ['hh', hours] ||\n                days === 1 && ['d'] ||\n                days < relativeTimeThresholds.d && ['dd', days] ||\n                months === 1 && ['M'] ||\n                months < relativeTimeThresholds.M && ['MM', months] ||\n                years === 1 && ['y'] || ['yy', years];\n\n        args[2] = withoutSuffix;\n        args[3] = +posNegDuration > 0;\n        args[4] = locale;\n        return substituteTimeAgo.apply({}, args);\n    }\n\n\n    /************************************\n        Week of Year\n    ************************************/\n\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;\n\n        d = d === 0 ? 7 : d;\n        weekday = weekday != null ? weekday : firstDayOfWeek;\n        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n        return {\n            year: dayOfYear > 0 ? year : year - 1,\n            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    function makeMoment(config) {\n        var input = config._i,\n            format = config._f,\n            res;\n\n        config._locale = config._locale || moment.localeData(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return moment.invalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (moment.isMoment(input)) {\n            return new Moment(input, true);\n        } else if (format) {\n            if (isArray(format)) {\n                makeDateFromStringAndArray(config);\n            } else {\n                makeDateFromStringAndFormat(config);\n            }\n        } else {\n            makeDateFromInput(config);\n        }\n\n        res = new Moment(config);\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    moment = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._i = input;\n        c._f = format;\n        c._l = locale;\n        c._strict = strict;\n        c._isUTC = false;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c);\n    };\n\n    moment.suppressDeprecationWarnings = false;\n\n    moment.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return moment();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    moment.min = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    };\n\n    moment.max = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    };\n\n    // creating with utc\n    moment.utc = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._useUTC = true;\n        c._isUTC = true;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c).utc();\n    };\n\n    // creating with unix timestamp (in seconds)\n    moment.unix = function (input) {\n        return moment(input * 1000);\n    };\n\n    // duration\n    moment.duration = function (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            parseIso,\n            diffRes;\n\n        if (moment.isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = isoDurationRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            parseIso = function (inp) {\n                // We'd normally use ~~inp for this, but unfortunately it also\n                // converts floats to ints.\n                // inp may be undefined, so careful calling replace on it.\n                var res = inp && parseFloat(inp.replace(',', '.'));\n                // apply sign while we're at it\n                return (isNaN(res) ? 0 : res) * sign;\n            };\n            duration = {\n                y: parseIso(match[2]),\n                M: parseIso(match[3]),\n                d: parseIso(match[4]),\n                h: parseIso(match[5]),\n                m: parseIso(match[6]),\n                s: parseIso(match[7]),\n                w: parseIso(match[8])\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' &&\n                ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    };\n\n    // version number\n    moment.version = VERSION;\n\n    // default format\n    moment.defaultFormat = isoFormat;\n\n    // constant that refers to the ISO standard\n    moment.ISO_8601 = function () {};\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    moment.momentProperties = momentProperties;\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    moment.updateOffset = function () {};\n\n    // This function allows you to set a threshold for relative time strings\n    moment.relativeTimeThreshold = function (threshold, limit) {\n        if (relativeTimeThresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return relativeTimeThresholds[threshold];\n        }\n        relativeTimeThresholds[threshold] = limit;\n        return true;\n    };\n\n    moment.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        function (key, value) {\n            return moment.locale(key, value);\n        }\n    );\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    moment.locale = function (key, values) {\n        var data;\n        if (key) {\n            if (typeof(values) !== 'undefined') {\n                data = moment.defineLocale(key, values);\n            }\n            else {\n                data = moment.localeData(key);\n            }\n\n            if (data) {\n                moment.duration._locale = moment._locale = data;\n            }\n        }\n\n        return moment._locale._abbr;\n    };\n\n    moment.defineLocale = function (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            if (!locales[name]) {\n                locales[name] = new Locale();\n            }\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            moment.locale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    };\n\n    moment.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        function (key) {\n            return moment.localeData(key);\n        }\n    );\n\n    // returns locale data\n    moment.localeData = function (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return moment._locale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    };\n\n    // compare moment object\n    moment.isMoment = function (obj) {\n        return obj instanceof Moment ||\n            (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n    };\n\n    // for typechecking Duration objects\n    moment.isDuration = function (obj) {\n        return obj instanceof Duration;\n    };\n\n    for (i = lists.length - 1; i >= 0; --i) {\n        makeList(lists[i]);\n    }\n\n    moment.normalizeUnits = function (units) {\n        return normalizeUnits(units);\n    };\n\n    moment.invalid = function (flags) {\n        var m = moment.utc(NaN);\n        if (flags != null) {\n            extend(m._pf, flags);\n        }\n        else {\n            m._pf.userInvalidated = true;\n        }\n\n        return m;\n    };\n\n    moment.parseZone = function () {\n        return moment.apply(null, arguments).parseZone();\n    };\n\n    moment.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    moment.isDate = isDate;\n\n    /************************************\n        Moment Prototype\n    ************************************/\n\n\n    extend(moment.fn = Moment.prototype, {\n\n        clone : function () {\n            return moment(this);\n        },\n\n        valueOf : function () {\n            return +this._d - ((this._offset || 0) * 60000);\n        },\n\n        unix : function () {\n            return Math.floor(+this / 1000);\n        },\n\n        toString : function () {\n            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n        },\n\n        toDate : function () {\n            return this._offset ? new Date(+this) : this._d;\n        },\n\n        toISOString : function () {\n            var m = moment(this).utc();\n            if (0 < m.year() && m.year() <= 9999) {\n                if ('function' === typeof Date.prototype.toISOString) {\n                    // native implementation is ~50x faster, use it when we can\n                    return this.toDate().toISOString();\n                } else {\n                    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n                }\n            } else {\n                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        },\n\n        toArray : function () {\n            var m = this;\n            return [\n                m.year(),\n                m.month(),\n                m.date(),\n                m.hours(),\n                m.minutes(),\n                m.seconds(),\n                m.milliseconds()\n            ];\n        },\n\n        isValid : function () {\n            return isValid(this);\n        },\n\n        isDSTShifted : function () {\n            if (this._a) {\n                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n            }\n\n            return false;\n        },\n\n        parsingFlags : function () {\n            return extend({}, this._pf);\n        },\n\n        invalidAt: function () {\n            return this._pf.overflow;\n        },\n\n        utc : function (keepLocalTime) {\n            return this.utcOffset(0, keepLocalTime);\n        },\n\n        local : function (keepLocalTime) {\n            if (this._isUTC) {\n                this.utcOffset(0, keepLocalTime);\n                this._isUTC = false;\n\n                if (keepLocalTime) {\n                    this.subtract(this._dateUtcOffset(), 'm');\n                }\n            }\n            return this;\n        },\n\n        format : function (inputString) {\n            var output = formatMoment(this, inputString || moment.defaultFormat);\n            return this.localeData().postformat(output);\n        },\n\n        add : createAdder(1, 'add'),\n\n        subtract : createAdder(-1, 'subtract'),\n\n        diff : function (input, units, asFloat) {\n            var that = makeAs(input, this),\n                zoneDiff = (that.utcOffset() - this.utcOffset()) * 6e4,\n                anchor, diff, output, daysAdjust;\n\n            units = normalizeUnits(units);\n\n            if (units === 'year' || units === 'month' || units === 'quarter') {\n                output = monthDiff(this, that);\n                if (units === 'quarter') {\n                    output = output / 3;\n                } else if (units === 'year') {\n                    output = output / 12;\n                }\n            } else {\n                diff = this - that;\n                output = units === 'second' ? diff / 1e3 : // 1000\n                    units === 'minute' ? diff / 6e4 : // 1000 * 60\n                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                    diff;\n            }\n            return asFloat ? output : absRound(output);\n        },\n\n        from : function (time, withoutSuffix) {\n            return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        },\n\n        fromNow : function (withoutSuffix) {\n            return this.from(moment(), withoutSuffix);\n        },\n\n        calendar : function (time) {\n            // We want to compare the start of today, vs this.\n            // Getting start-of-today depends on whether we're locat/utc/offset\n            // or not.\n            var now = time || moment(),\n                sod = makeAs(now, this).startOf('day'),\n                diff = this.diff(sod, 'days', true),\n                format = diff < -6 ? 'sameElse' :\n                    diff < -1 ? 'lastWeek' :\n                    diff < 0 ? 'lastDay' :\n                    diff < 1 ? 'sameDay' :\n                    diff < 2 ? 'nextDay' :\n                    diff < 7 ? 'nextWeek' : 'sameElse';\n            return this.format(this.localeData().calendar(format, this, moment(now)));\n        },\n\n        isLeapYear : function () {\n            return isLeapYear(this.year());\n        },\n\n        isDST : function () {\n            return (this.utcOffset() > this.clone().month(0).utcOffset() ||\n                this.utcOffset() > this.clone().month(5).utcOffset());\n        },\n\n        day : function (input) {\n            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n            if (input != null) {\n                input = parseWeekday(input, this.localeData());\n                return this.add(input - day, 'd');\n            } else {\n                return day;\n            }\n        },\n\n        month : makeAccessor('Month', true),\n\n        startOf : function (units) {\n            units = normalizeUnits(units);\n            // the following switch intentionally omits break keywords\n            // to utilize falling through the cases.\n            switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n                /* falls through */\n            }\n\n            // weeks are a special case\n            if (units === 'week') {\n                this.weekday(0);\n            } else if (units === 'isoWeek') {\n                this.isoWeekday(1);\n            }\n\n            // quarters are also special\n            if (units === 'quarter') {\n                this.month(Math.floor(this.month() / 3) * 3);\n            }\n\n            return this;\n        },\n\n        endOf: function (units) {\n            units = normalizeUnits(units);\n            if (units === undefined || units === 'millisecond') {\n                return this;\n            }\n            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n        },\n\n        isAfter: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this > +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return inputMs < +this.clone().startOf(units);\n            }\n        },\n\n        isBefore: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this < +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return +this.clone().endOf(units) < inputMs;\n            }\n        },\n\n        isBetween: function (from, to, units) {\n            return this.isAfter(from, units) && this.isBefore(to, units);\n        },\n\n        isSame: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(units || 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this === +input;\n            } else {\n                inputMs = +moment(input);\n                return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n            }\n        },\n\n        min: deprecate(\n                 'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n                 function (other) {\n                     other = moment.apply(null, arguments);\n                     return other < this ? this : other;\n                 }\n         ),\n\n        max: deprecate(\n                'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n                function (other) {\n                    other = moment.apply(null, arguments);\n                    return other > this ? this : other;\n                }\n        ),\n\n        zone : deprecate(\n                'moment().zone is deprecated, use moment().utcOffset instead. ' +\n                'https://github.com/moment/moment/issues/1779',\n                function (input, keepLocalTime) {\n                    if (input != null) {\n                        if (typeof input !== 'string') {\n                            input = -input;\n                        }\n\n                        this.utcOffset(input, keepLocalTime);\n\n                        return this;\n                    } else {\n                        return -this.utcOffset();\n                    }\n                }\n        ),\n\n        // keepLocalTime = true means only change the timezone, without\n        // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n        // +0200, so we adjust the time as needed, to be valid.\n        //\n        // Keeping the time actually adds/subtracts (one hour)\n        // from the actual represented time. That is why we call updateOffset\n        // a second time. In case it wants us to change the offset again\n        // _changeInProgress == true case, then we have to adjust, because\n        // there is no such time in the given timezone.\n        utcOffset : function (input, keepLocalTime) {\n            var offset = this._offset || 0,\n                localAdjust;\n            if (input != null) {\n                if (typeof input === 'string') {\n                    input = utcOffsetFromString(input);\n                }\n                if (Math.abs(input) < 16) {\n                    input = input * 60;\n                }\n                if (!this._isUTC && keepLocalTime) {\n                    localAdjust = this._dateUtcOffset();\n                }\n                this._offset = input;\n                this._isUTC = true;\n                if (localAdjust != null) {\n                    this.add(localAdjust, 'm');\n                }\n                if (offset !== input) {\n                    if (!keepLocalTime || this._changeInProgress) {\n                        addOrSubtractDurationFromMoment(this,\n                                moment.duration(input - offset, 'm'), 1, false);\n                    } else if (!this._changeInProgress) {\n                        this._changeInProgress = true;\n                        moment.updateOffset(this, true);\n                        this._changeInProgress = null;\n                    }\n                }\n\n                return this;\n            } else {\n                return this._isUTC ? offset : this._dateUtcOffset();\n            }\n        },\n\n        isLocal : function () {\n            return !this._isUTC;\n        },\n\n        isUtcOffset : function () {\n            return this._isUTC;\n        },\n\n        isUtc : function () {\n            return this._isUTC && this._offset === 0;\n        },\n\n        zoneAbbr : function () {\n            return this._isUTC ? 'UTC' : '';\n        },\n\n        zoneName : function () {\n            return this._isUTC ? 'Coordinated Universal Time' : '';\n        },\n\n        parseZone : function () {\n            if (this._tzm) {\n                this.utcOffset(this._tzm);\n            } else if (typeof this._i === 'string') {\n                this.utcOffset(utcOffsetFromString(this._i));\n            }\n            return this;\n        },\n\n        hasAlignedHourOffset : function (input) {\n            if (!input) {\n                input = 0;\n            }\n            else {\n                input = moment(input).utcOffset();\n            }\n\n            return (this.utcOffset() - input) % 60 === 0;\n        },\n\n        daysInMonth : function () {\n            return daysInMonth(this.year(), this.month());\n        },\n\n        dayOfYear : function (input) {\n            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n        },\n\n        quarter : function (input) {\n            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n        },\n\n        weekYear : function (input) {\n            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        isoWeekYear : function (input) {\n            var year = weekOfYear(this, 1, 4).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        week : function (input) {\n            var week = this.localeData().week(this);\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        isoWeek : function (input) {\n            var week = weekOfYear(this, 1, 4).week;\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        weekday : function (input) {\n            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n            return input == null ? weekday : this.add(input - weekday, 'd');\n        },\n\n        isoWeekday : function (input) {\n            // behaves the same as moment#day except\n            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n            // as a setter, sunday should belong to the previous week.\n            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n        },\n\n        isoWeeksInYear : function () {\n            return weeksInYear(this.year(), 1, 4);\n        },\n\n        weeksInYear : function () {\n            var weekInfo = this.localeData()._week;\n            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units]();\n        },\n\n        set : function (units, value) {\n            var unit;\n            if (typeof units === 'object') {\n                for (unit in units) {\n                    this.set(unit, units[unit]);\n                }\n            }\n            else {\n                units = normalizeUnits(units);\n                if (typeof this[units] === 'function') {\n                    this[units](value);\n                }\n            }\n            return this;\n        },\n\n        // If passed a locale key, it will set the locale for this\n        // instance.  Otherwise, it will return the locale configuration\n        // variables for this instance.\n        locale : function (key) {\n            var newLocaleData;\n\n            if (key === undefined) {\n                return this._locale._abbr;\n            } else {\n                newLocaleData = moment.localeData(key);\n                if (newLocaleData != null) {\n                    this._locale = newLocaleData;\n                }\n                return this;\n            }\n        },\n\n        lang : deprecate(\n            'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n            function (key) {\n                if (key === undefined) {\n                    return this.localeData();\n                } else {\n                    return this.locale(key);\n                }\n            }\n        ),\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        _dateUtcOffset : function () {\n            // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n            // https://github.com/moment/moment/pull/1871\n            return -Math.round(this._d.getTimezoneOffset() / 15) * 15;\n        }\n\n    });\n\n    function rawMonthSetter(mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(),\n                daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function rawGetter(mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function rawSetter(mom, unit, value) {\n        if (unit === 'Month') {\n            return rawMonthSetter(mom, value);\n        } else {\n            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n\n    function makeAccessor(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                rawSetter(this, unit, value);\n                moment.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return rawGetter(this, unit);\n            }\n        };\n    }\n\n    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);\n    // moment.fn.month is defined separately\n    moment.fn.date = makeAccessor('Date', true);\n    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n    moment.fn.year = makeAccessor('FullYear', true);\n    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));\n\n    // add plural methods\n    moment.fn.days = moment.fn.day;\n    moment.fn.months = moment.fn.month;\n    moment.fn.weeks = moment.fn.week;\n    moment.fn.isoWeeks = moment.fn.isoWeek;\n    moment.fn.quarters = moment.fn.quarter;\n\n    // add aliased format methods\n    moment.fn.toJSON = moment.fn.toISOString;\n\n    // alias isUtc for dev-friendliness\n    moment.fn.isUTC = moment.fn.isUtc;\n\n    /************************************\n        Duration Prototype\n    ************************************/\n\n\n    function daysToYears (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        return days * 400 / 146097;\n    }\n\n    function yearsToDays (years) {\n        // years * 365 + absRound(years / 4) -\n        //     absRound(years / 100) + absRound(years / 400);\n        return years * 146097 / 400;\n    }\n\n    extend(moment.duration.fn = Duration.prototype, {\n\n        _bubble : function () {\n            var milliseconds = this._milliseconds,\n                days = this._days,\n                months = this._months,\n                data = this._data,\n                seconds, minutes, hours, years = 0;\n\n            // The following code bubbles up values, see the tests for\n            // examples of what that means.\n            data.milliseconds = milliseconds % 1000;\n\n            seconds = absRound(milliseconds / 1000);\n            data.seconds = seconds % 60;\n\n            minutes = absRound(seconds / 60);\n            data.minutes = minutes % 60;\n\n            hours = absRound(minutes / 60);\n            data.hours = hours % 24;\n\n            days += absRound(hours / 24);\n\n            // Accurately convert days to years, assume start from year 0.\n            years = absRound(daysToYears(days));\n            days -= absRound(yearsToDays(years));\n\n            // 30 days to a month\n            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n            months += absRound(days / 30);\n            days %= 30;\n\n            // 12 months -> 1 year\n            years += absRound(months / 12);\n            months %= 12;\n\n            data.days = days;\n            data.months = months;\n            data.years = years;\n        },\n\n        abs : function () {\n            this._milliseconds = Math.abs(this._milliseconds);\n            this._days = Math.abs(this._days);\n            this._months = Math.abs(this._months);\n\n            this._data.milliseconds = Math.abs(this._data.milliseconds);\n            this._data.seconds = Math.abs(this._data.seconds);\n            this._data.minutes = Math.abs(this._data.minutes);\n            this._data.hours = Math.abs(this._data.hours);\n            this._data.months = Math.abs(this._data.months);\n            this._data.years = Math.abs(this._data.years);\n\n            return this;\n        },\n\n        weeks : function () {\n            return absRound(this.days() / 7);\n        },\n\n        valueOf : function () {\n            return this._milliseconds +\n              this._days * 864e5 +\n              (this._months % 12) * 2592e6 +\n              toInt(this._months / 12) * 31536e6;\n        },\n\n        humanize : function (withSuffix) {\n            var output = relativeTime(this, !withSuffix, this.localeData());\n\n            if (withSuffix) {\n                output = this.localeData().pastFuture(+this, output);\n            }\n\n            return this.localeData().postformat(output);\n        },\n\n        add : function (input, val) {\n            // supports only 2.0-style add(1, 's') or add(moment)\n            var dur = moment.duration(input, val);\n\n            this._milliseconds += dur._milliseconds;\n            this._days += dur._days;\n            this._months += dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        subtract : function (input, val) {\n            var dur = moment.duration(input, val);\n\n            this._milliseconds -= dur._milliseconds;\n            this._days -= dur._days;\n            this._months -= dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units.toLowerCase() + 's']();\n        },\n\n        as : function (units) {\n            var days, months;\n            units = normalizeUnits(units);\n\n            if (units === 'month' || units === 'year') {\n                days = this._days + this._milliseconds / 864e5;\n                months = this._months + daysToYears(days) * 12;\n                return units === 'month' ? months : months / 12;\n            } else {\n                // handle milliseconds separately because of floating point math errors (issue #1867)\n                days = this._days + Math.round(yearsToDays(this._months / 12));\n                switch (units) {\n                    case 'week': return days / 7 + this._milliseconds / 6048e5;\n                    case 'day': return days + this._milliseconds / 864e5;\n                    case 'hour': return days * 24 + this._milliseconds / 36e5;\n                    case 'minute': return days * 24 * 60 + this._milliseconds / 6e4;\n                    case 'second': return days * 24 * 60 * 60 + this._milliseconds / 1000;\n                    // Math.floor prevents floating point math errors here\n                    case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n                    default: throw new Error('Unknown unit ' + units);\n                }\n            }\n        },\n\n        lang : moment.fn.lang,\n        locale : moment.fn.locale,\n\n        toIsoString : deprecate(\n            'toIsoString() is deprecated. Please use toISOString() instead ' +\n            '(notice the capitals)',\n            function () {\n                return this.toISOString();\n            }\n        ),\n\n        toISOString : function () {\n            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n            var years = Math.abs(this.years()),\n                months = Math.abs(this.months()),\n                days = Math.abs(this.days()),\n                hours = Math.abs(this.hours()),\n                minutes = Math.abs(this.minutes()),\n                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\n            if (!this.asSeconds()) {\n                // this is the same as C#'s (Noda) and python (isodate)...\n                // but not other JS (goog.date)\n                return 'P0D';\n            }\n\n            return (this.asSeconds() < 0 ? '-' : '') +\n                'P' +\n                (years ? years + 'Y' : '') +\n                (months ? months + 'M' : '') +\n                (days ? days + 'D' : '') +\n                ((hours || minutes || seconds) ? 'T' : '') +\n                (hours ? hours + 'H' : '') +\n                (minutes ? minutes + 'M' : '') +\n                (seconds ? seconds + 'S' : '');\n        },\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        toJSON : function () {\n            return this.toISOString();\n        }\n    });\n\n    moment.duration.fn.toString = moment.duration.fn.toISOString;\n\n    function makeDurationGetter(name) {\n        moment.duration.fn[name] = function () {\n            return this._data[name];\n        };\n    }\n\n    for (i in unitMillisecondFactors) {\n        if (hasOwnProp(unitMillisecondFactors, i)) {\n            makeDurationGetter(i.toLowerCase());\n        }\n    }\n\n    moment.duration.fn.asMilliseconds = function () {\n        return this.as('ms');\n    };\n    moment.duration.fn.asSeconds = function () {\n        return this.as('s');\n    };\n    moment.duration.fn.asMinutes = function () {\n        return this.as('m');\n    };\n    moment.duration.fn.asHours = function () {\n        return this.as('h');\n    };\n    moment.duration.fn.asDays = function () {\n        return this.as('d');\n    };\n    moment.duration.fn.asWeeks = function () {\n        return this.as('weeks');\n    };\n    moment.duration.fn.asMonths = function () {\n        return this.as('M');\n    };\n    moment.duration.fn.asYears = function () {\n        return this.as('y');\n    };\n\n    /************************************\n        Default Locale\n    ************************************/\n\n\n    // Set default locale, other locale will inherit from English.\n    moment.locale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    /* EMBED_LOCALES */\n\n    /************************************\n        Exposing Moment\n    ************************************/\n\n    function makeGlobal(shouldDeprecate) {\n        /*global ender:false */\n        if (typeof ender !== 'undefined') {\n            return;\n        }\n        oldGlobalMoment = globalScope.moment;\n        if (shouldDeprecate) {\n            globalScope.moment = deprecate(\n                    'Accessing Moment through the global scope is ' +\n                    'deprecated, and will be removed in an upcoming ' +\n                    'release.',\n                    moment);\n        } else {\n            globalScope.moment = moment;\n        }\n    }\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = moment;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function (require, exports, module) {\n            if (module.config && module.config() && module.config().noGlobal === true) {\n                // release the global variable\n                globalScope.moment = oldGlobalMoment;\n            }\n\n            return moment;\n        });\n        makeGlobal(true);\n    } else {\n        makeGlobal();\n    }\n}).call(this);\n","/* Riot v2.0.8, @license MIT, (c) 2015 Muut Inc. + contributors */\n\n;(function() {\n\nvar riot = { version: 'v2.0.8', settings: {} }\n\n'use strict'\n\nriot.observable = function(el) {\n\n  el = el || {}\n\n  var callbacks = {}\n\n  el.on = function(events, fn) {\n    if (typeof fn == 'function') {\n      events.replace(/\\S+/g, function(name, pos) {\n        (callbacks[name] = callbacks[name] || []).push(fn)\n        fn.typed = pos > 0\n      })\n    }\n    return el\n  }\n\n  el.off = function(events, fn) {\n    if (events == '*') callbacks = {}\n    else if (fn) {\n      var arr = callbacks[events]\n      for (var i = 0, cb; (cb = arr && arr[i]); ++i) {\n        if (cb == fn) { arr.splice(i, 1); i-- }\n      }\n    } else {\n      events.replace(/\\S+/g, function(name) {\n        callbacks[name] = []\n      })\n    }\n    return el\n  }\n\n  // only single event supported\n  el.one = function(name, fn) {\n    if (fn) fn.one = 1\n    return el.on(name, fn)\n  }\n\n  el.trigger = function(name) {\n    var args = [].slice.call(arguments, 1),\n        fns = callbacks[name] || []\n\n    for (var i = 0, fn; (fn = fns[i]); ++i) {\n      if (!fn.busy) {\n        fn.busy = 1\n        fn.apply(el, fn.typed ? [name].concat(args) : args)\n        if (fn.one) { fns.splice(i, 1); i-- }\n         else if (fns[i] !== fn) { i-- } // Makes self-removal possible during iteration\n        fn.busy = 0\n      }\n    }\n\n    return el\n  }\n\n  return el\n\n}\n;(function(riot, evt) {\n\n  // browsers only\n  if (!this.top) return\n\n  var loc = location,\n      fns = riot.observable(),\n      current = hash(),\n      win = window\n\n  function hash() {\n    return loc.hash.slice(1)\n  }\n\n  function parser(path) {\n    return path.split('/')\n  }\n\n  function emit(path) {\n    if (path.type) path = hash()\n\n    if (path != current) {\n      fns.trigger.apply(null, ['H'].concat(parser(path)))\n      current = path\n    }\n  }\n\n  var r = riot.route = function(arg) {\n    // string\n    if (arg[0]) {\n      loc.hash = arg\n      emit(arg)\n\n    // function\n    } else {\n      fns.on('H', arg)\n    }\n  }\n\n  r.exec = function(fn) {\n    fn.apply(null, parser(hash()))\n  }\n\n  r.parser = function(fn) {\n    parser = fn\n  }\n\n  win.addEventListener ? win.addEventListener(evt, emit, false) : win.attachEvent('on' + evt, emit)\n\n})(riot, 'hashchange')\n/*\n\n//// How it works?\n\n\nThree ways:\n\n1. Expressions: tmpl('{ value }', data).\n   Returns the result of evaluated expression as a raw object.\n\n2. Templates: tmpl('Hi { name } { surname }', data).\n   Returns a string with evaluated expressions.\n\n3. Filters: tmpl('{ show: !done, highlight: active }', data).\n   Returns a space separated list of trueish keys (mainly\n   used for setting html classes), e.g. \"show highlight\".\n\n\n// Template examples\n\ntmpl('{ title || \"Untitled\" }', data)\ntmpl('Results are { results ? \"ready\" : \"loading\" }', data)\ntmpl('Today is { new Date() }', data)\ntmpl('{ message.length > 140 && \"Message is too long\" }', data)\ntmpl('This item got { Math.round(rating) } stars', data)\ntmpl('<h1>{ title }</h1>{ body }', data)\n\n\n// Falsy expressions in templates\n\nIn templates (as opposed to single expressions) all falsy values\nexcept zero (undefined/null/false) will default to empty string:\n\ntmpl('{ undefined } - { false } - { null } - { 0 }', {})\n// will return: \" - - - 0\"\n\n\n// Customizable brackets\n\n  riot.settings.brackets = '[ ]'\n  riot.settings.brackets = '<% %>'\n\n*/\n\nvar tmpl = (function() {\n\n  var cache = {},\n      brackets,\n      re_expr,\n      re_vars = /(\"|').+?[^\\\\]\\1|\\.\\w*|\\w*:|\\b(?:(?:new|typeof|in|instanceof) |(?:this|true|false|null|undefined)\\b|function *\\()|([a-z_]\\w*)/gi\n              // [ 1            ][ 2  ][ 3 ][ 4                                                                                  ][ 5       ]\n              // find variable names:\n              // 1. skip quoted strings: \"a b\", 'a b', 'a \\'b\\''\n              // 2. skip object properties: .name\n              // 3. skip object literals: name:\n              // 4. skip javascript keywords\n              // 5. match var name\n\n  return function(str, data) {\n\n    // make sure we use current brackets setting\n    var b = riot.settings.brackets || '{ }'\n    if(b != brackets){\n      brackets = b.split(' ')\n      re_expr = re(/({[\\s\\S]*?})/)\n    }\n\n    // build a template (or get it from cache), render with data\n    // (or just test if string has expression when called w/o data)\n    return data\n      ? str && (cache[str] = cache[str] || tmpl(str))(data)\n      : re_expr.test(str)\n\n  }\n\n\n  // create a template instance\n\n  function tmpl(s, p) {\n\n    // default template string to {}\n    p = (s || brackets.join(''))\n\n      // temporarily convert \\{ and \\} to a non-character\n      .replace(re(/\\\\{/), '\\uFFF0')\n      .replace(re(/\\\\}/), '\\uFFF1')\n      \n      // split string to expression and non-expresion parts\n      .split(re_expr)\n\n    return new Function('d', 'return ' + (\n\n      // is it a single expression or a template? i.e. {x} or <b>{x}</b>\n      !p[0] && !p[2] && !p[3]\n\n        // if expression, evaluate it\n        ? expr(p[1])\n\n        // if template, evaluate all expressions in it\n        : '[' + p.map(function(s, i) {\n\n            // is it an expression or a string (every second part is an expression)\n            return i % 2\n\n              // evaluate the expressions\n              ? expr(s, 1)\n\n              // process string parts of the template:\n              : '\"' + s\n\n                  // preserve new lines\n                  .replace(/\\n/g, '\\\\n')\n\n                  // escape quotes\n                  .replace(/\"/g, '\\\\\"')\n\n                + '\"'\n\n          }).join(',') + '].join(\"\")'\n      )\n\n      // bring escaped { and } back\n      .replace(/\\uFFF0/g, brackets[0])\n      .replace(/\\uFFF1/g, brackets[1])\n\n    )\n\n  }\n\n\n  // parse { ... } expression\n\n  function expr(s, n) {\n    s = s\n\n      // convert new lines to spaces\n      .replace(/\\n/g, ' ')\n\n      // trim whitespace, curly brackets, strip comments\n      .replace(re(/^[{ ]+|[ }]+$|\\/\\*.+?\\*\\//g), '')\n\n    // is it an object literal? i.e. { key : value }\n    return /^\\s*[\\w-\"']+ *:/.test(s)\n\n      // if object literal, return trueish keys\n      // e.g.: { show: isOpen(), done: item.done } -> \"show done\"\n      ? '[' + s.replace(/\\W*([\\w-]+)\\W*:([^,]+)/g, function(_, k, v) {\n\n          // safely execute vars to prevent undefined value errors\n          return v.replace(/\\w[^,|& ]*/g, function(v) { return wrap(v, n) }) + '?\"' + k + '\":\"\",'\n\n        }) + '].join(\" \")'\n\n      // if js expression, evaluate as javascript\n      : wrap(s, n)\n\n  }\n\n\n  // execute js w/o breaking on errors or undefined vars\n\n  function wrap(s, nonull) {\n    return '(function(v){try{v='\n\n        // prefix vars (name => data.name)\n        + (s.replace(re_vars, function(s, _, v) { return v ? '(d.'+v+'===undefined?window.'+v+':d.'+v+')' : s })\n\n          // break the expression if its empty (resulting in undefined value)\n          || 'x')\n\n      + '}finally{return '\n\n        // default to empty string for falsy values except zero\n        + (nonull ? '!v&&v!==0?\"\":v' : 'v')\n\n      + '}}).call(d)'\n  }\n\n\n  // change regexp to use custom brackets\n\n  function re(r) {\n    return RegExp(r.source\n                   .split('{').join('\\\\'+brackets[0])\n                   .split('}').join('\\\\'+brackets[1]),\n                  r.global ? 'g' : '')\n  }\n\n})()\n// { key, i in items} -> { key, i, items }\nfunction loopKeys(expr) {\n  var ret = { val: expr },\n      els = expr.split(/\\s+in\\s+/)\n\n  if (els[1]) {\n    ret.val = '{ ' + els[1]\n    els = els[0].slice(1).trim().split(/,\\s*/)\n    ret.key = els[0]\n    ret.pos = els[1]\n  }\n  return ret\n}\n\nfunction _each(dom, parent, expr) {\n\n  remAttr(dom, 'each')\n\n  var template = dom.outerHTML,\n      prev = dom.previousSibling,\n      root = dom.parentNode,\n      rendered = [],\n      tags = [],\n      checksum\n\n  expr = loopKeys(expr)\n\n  // clean template code after update (and let walk finish it's parse)\n  parent.one('update', function() {\n    root.removeChild(dom)\n\n  }).one('mount', function() {\n    if (!hasParent(root)) root = parent.root\n\n  }).on('update', function() {\n\n    var items = tmpl(expr.val, parent)\n    if (!items) return\n\n    // object loop. any changes cause full redraw\n    if (!Array.isArray(items)) {\n      var testsum = JSON.stringify(items)\n      if (testsum == checksum) return\n      checksum = testsum\n\n      // clear old items\n      tags.map(function(tag) {\n        tag.unmount()\n      })\n\n      tags = rendered = []\n\n      items = Object.keys(items).map(function(key, i) {\n        var obj = {}\n        obj[expr.key] = key\n        obj[expr.pos] = items[key]\n        return obj\n      })\n\n    }\n\n    // unmount redundant\n    arrDiff(rendered, items).map(function(item) {\n      var pos = rendered.indexOf(item),\n          tag = tags[pos]\n\n      if (tag) {\n        tag.unmount()\n        rendered.splice(pos, 1)\n        tags.splice(pos, 1)\n      }\n    })\n\n    // mount new\n    var nodes = root.childNodes,\n        prev_index = Array.prototype.indexOf.call(nodes, prev)\n\n    arrDiff(items, rendered).map(function(item, i) {\n\n      var pos = items.indexOf(item)\n\n      if (!checksum && expr.key) {\n        var obj = {}\n        obj[expr.key] = item\n        obj[expr.pos] = pos\n        item = obj\n      }\n\n      var tag = new Tag({ tmpl: template }, {\n        before: nodes[prev_index + 1 + pos],\n        parent: parent,\n        root: root,\n        loop: true,\n        item: item\n      })\n\n      tags.splice(pos, 0, tag)\n\n    })\n\n    rendered = items.slice()\n\n  })\n\n}\nfunction parseNamedElements(root, tag, expressions) {\n  walk(root, function(dom) {\n    if (dom.nodeType != 1) return\n\n    each(dom.attributes, function(attr) {\n      if (/^(name|id)$/.test(attr.name)) tag[attr.value] = dom\n    })\n  })\n}\n\nfunction parseLayout(root, tag, expressions) {\n\n  function addExpr(dom, value, data) {\n    if (tmpl(value) || data) {\n      var expr = { dom: dom, expr: value }\n      expressions.push(extend(expr, data || {}))\n    }\n  }\n\n  walk(root, function(dom) {\n\n    var type = dom.nodeType\n\n    // text node\n    if (type == 3 && dom.parentNode.tagName != 'STYLE') addExpr(dom, dom.nodeValue)\n    if (type != 1) return\n\n    /* element */\n\n    // loop\n    var attr = dom.getAttribute('each')\n    if (attr) { _each(dom, tag, attr); return false }\n\n    // child tag\n    var impl = tag_impl[dom.tagName.toLowerCase()]\n    if (impl) {\n      impl = new Tag(impl, { root: dom, parent: tag })\n      return false\n    }\n\n    // attributes\n    each(dom.attributes, function(attr) {\n      var name = attr.name,\n          value = attr.value\n\n      // expressions\n      var bool = name.split('__')[1]\n      addExpr(dom, value, { attr: bool || name, bool: bool })\n\n      if (bool) {\n        remAttr(dom, name)\n        return false\n      }\n\n    })\n\n  })\n\n}\nfunction Tag(impl, conf) {\n\n  var self = riot.observable(this),\n      expressions = [],\n      attributes = {},\n      parent = conf.parent,\n      is_loop = conf.loop,\n      root = conf.root,\n      opts = conf.opts,\n      item = conf.item\n\n  // cannot initialize twice on the same root element\n  if (!is_loop && root.riot) return\n  root.riot = 1\n\n  opts = opts || {}\n\n  extend(this, { parent: parent, root: root, opts: opts, children: [] })\n  extend(this, item)\n\n\n  // attributes\n  each(root.attributes, function(attr) {\n    var name = attr.name,\n        val = attr.value\n\n    attributes[name] = val\n\n    // remove dynamic attributes from node\n    if (val.indexOf('{') >= 0) {\n      remAttr(root, name)\n      return false\n    }\n  })\n\n  // options\n  function updateOpts() {\n    Object.keys(attributes).map(function(name) {\n      opts[name] = tmpl(attributes[name], parent || self)\n    })\n  }\n\n  updateOpts()\n\n  // child\n  parent && parent.children.push(this)\n\n  var dom = mkdom(impl.tmpl),\n      loop_dom\n\n  // named elements\n  parseNamedElements(dom, this)\n\n  this.update = function(data, init) {\n    extend(self, data)\n    extend(self, item)\n    self.trigger('update')\n    updateOpts()\n    update(expressions, self, item)\n    self.trigger('updated')\n  }\n\n  this.unmount = function() {\n\n    if (is_loop) {\n      root.removeChild(loop_dom)\n\n    } else {\n      var p = root.parentNode\n      p && p.removeChild(root)\n    }\n\n    // splice from parent.children[]\n    if (parent) {\n      var els = parent.children\n      els.splice(els.indexOf(self), 1)\n    }\n\n    self.trigger('unmount')\n\n    // cleanup\n    parent && parent.off('update', self.update)\n    mounted = false\n  }\n\n  function mount() {\n    while (dom.firstChild) {\n      if (is_loop) {\n        loop_dom = dom.firstChild\n        root.insertBefore(dom.firstChild, conf.before || null) // null needed for IE8\n\n      } else {\n        root.appendChild(dom.firstChild)\n      }\n    }\n\n    if (!hasParent(root)) self.root = root = parent.root\n\n    self.trigger('mount')\n\n    // one way data flow: propagate updates and unmounts downwards from parent to children\n    parent && parent.on('update', self.update).one('unmount', self.unmount)\n\n  }\n\n  // initialize\n  if (impl.fn) impl.fn.call(this, opts)\n\n  // layout\n  parseLayout(dom, this, expressions)\n\n  this.update()\n  mount()\n\n}\n\n\nfunction setEventHandler(name, handler, dom, tag, item) {\n\n  dom[name] = function(e) {\n\n    // cross browser event fix\n    e = e || window.event\n    e.which = e.which || e.charCode || e.keyCode\n    e.target = e.target || e.srcElement\n    e.currentTarget = dom\n    e.item = item\n\n    // prevent default behaviour (by default)\n    if (handler.call(tag, e) !== true) {\n      e.preventDefault && e.preventDefault()\n      e.returnValue = false\n    }\n\n    tag.update()\n  }\n\n}\n\nfunction insertTo(root, node, before) {\n  if (root) {\n    root.insertBefore(before, node)\n    root.removeChild(node)\n  }\n}\n\n// item = currently looped item\nfunction update(expressions, tag, item) {\n\n  each(expressions, function(expr) {\n    var dom = expr.dom,\n        attr_name = expr.attr,\n        value = tmpl(expr.expr, tag)\n\n    if (value == null) value = ''\n\n    // no change\n    if (expr.value === value) return\n    expr.value = value\n\n    // text node\n    if (!attr_name) return dom.nodeValue = value\n\n    // remove attribute\n    if (!value && expr.bool || /obj|func/.test(typeof value)) remAttr(dom, attr_name)\n\n    // event handler\n    if (typeof value == 'function') {\n      setEventHandler(attr_name, value, dom, tag, item)\n\n    // if- conditional\n    } else if (attr_name == 'if') {\n\n      remAttr(dom, attr_name)\n\n      var stub = expr.stub\n\n      // add to DOM\n      if (value) {\n        stub && insertTo(stub.parentNode, stub, dom)\n\n      // remove from DOM\n      } else {\n        stub = expr.stub = stub || document.createTextNode('')\n        insertTo(dom.parentNode, dom, stub)\n      }\n\n    // show / hide\n    } else if (/^(show|hide)$/.test(attr_name)) {\n      remAttr(dom, attr_name)\n      if (attr_name == 'hide') value = !value\n      dom.style.display = value ? '' : 'none'\n\n    // normal attribute\n    } else {\n      if (expr.bool) {\n        dom[attr_name] = value\n        if (!value) return\n        value = attr_name\n      }\n\n      dom.setAttribute(attr_name, value)\n    }\n\n  })\n\n}\nfunction each(nodes, fn) {\n  for (var i = 0; i < (nodes || []).length; i++) {\n    if (fn(nodes[i], i) === false) i--\n  }\n}\n\nfunction remAttr(dom, name) {\n  dom.removeAttribute(name)\n}\n\nfunction extend(obj, from) {\n  from && Object.keys(from).map(function(key) {\n    obj[key] = from[key]\n  })\n  return obj\n}\n\nfunction mkdom(template) {\n  var tag_name = template.trim().slice(1, 3).toLowerCase(),\n      root_tag = /td|th/.test(tag_name) ? 'tr' : tag_name == 'tr' ? 'tbody' : 'div'\n      el = document.createElement(root_tag)\n\n  el.stub = true\n  el.innerHTML = template\n  return el\n}\n\nfunction walk(dom, fn) {\n  dom = fn(dom) === false ? dom.nextSibling : dom.firstChild\n\n  while (dom) {\n    walk(dom, fn)\n    dom = dom.nextSibling\n  }\n}\n\nfunction arrDiff(arr1, arr2) {\n  return arr1.filter(function(el) {\n    return arr2.indexOf(el) < 0\n  })\n}\n\n// HTMLDocument == IE8 thing\nfunction hasParent(el) {\n  var p = el.parentNode,\n      doc = window.HTMLDocument\n\n  return p && !(doc && p instanceof doc)\n}\n\n/*\n Virtual dom is an array of custom tags on the document.\n Each tag stores an array of child tags.\n Updates and unmounts propagate downwards from parent to children.\n*/\n\nvar virtual_dom = [],\n    tag_impl = {}\n\nriot.tag = function(name, html, fn) {\n  tag_impl[name] = { name: name, tmpl: html, fn: fn }\n}\n\nvar mountTo = riot.mountTo = function(root, tagName, opts) {\n  var impl = tag_impl[tagName], tag\n\n  if (impl) tag = new Tag(impl, { root: root, opts: opts })\n\n  if (tag) {\n    virtual_dom.push(tag)\n    return tag.on('unmount', function() {\n      virtual_dom.splice(virtual_dom.indexOf(tag), 1)\n    })\n  }\n}\n\nriot.mount = function(selector, opts) {\n  if (selector == '*') selector = Object.keys(tag_impl).join(', ')\n\n  var tags = []\n\n  each(document.querySelectorAll(selector), function(root) {\n\n    var tagName = root.tagName.toLowerCase(),\n        tag = mountTo(root, tagName, opts)\n\n    if (tag) tags.push(tag)\n  })\n\n  return tags\n}\n\n// update everything\nriot.update = function() {\n  virtual_dom.map(function(tag) {\n    tag.update()\n  })\n  return virtual_dom\n}\n\n\n// support CommonJS\nif (typeof exports === 'object')\n  module.exports = riot\n\n// support AMD\nelse if (typeof define === 'function' && define.amd)\n  define(function() { return riot })\n\n// support browser\nelse\n  this.riot = riot\n\n})();\n","var RiotControl = {\n  _stores: [],\n  addStore: function(store) {\n    this._stores.push(store);\n  }\n};\n\n['on','one','off','trigger'].forEach(function(api){\n  RiotControl[api] = function() {\n    var args = [].slice.call(arguments);\n    this._stores.forEach(function(el){\n      el[api].apply(null, args);\n    });\n  };\n});\n\nif (typeof(module) !== 'undefined') module.exports = RiotControl;\n"],"sourceRoot":"/source/"}